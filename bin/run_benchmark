#!/bin/env python
from __future__ import print_function
from ROOT import gROOT, gSystem
import ROOT
import time
import os
import glob
from datetime import datetime
TODAY = datetime.now().timetuple()
ROOT.PyConfig.IgnoreCommandLineOptions = True
gROOT.SetBatch(1)
ROOT.TH1.SetDefaultSumw2(True)
# ROOT.gStyle.SetOptStat(0)


def timerfunc(func):
    """
    A timer decorator
    """
    def function_timer(*args, **kwargs):
        """
        A nested function for timing other functions
        """
        start = time.time()
        value = func(*args, **kwargs)
        end = time.time()
        runtime = end - start
        msg = "The runtime for {func} took {time} seconds to complete"
        print(msg.format(func=func.__name__,
                         time=runtime))
        return value
    return function_timer


@timerfunc
@profile
def run_legacy():
    print(">>>> Running legacy")
    n_chunks = 0  # it is not what you think it is
    n_jobs = 1
    n_events = 100000
    combine = False
    ROOT.makeJetResolutions(n_chunks, n_jobs, n_events, combine)


@timerfunc
@profile
def run_new(output_folder):
    print(">>>> Running new")
    from cmsl1t.playground import makeJetResolutions
    n_events = 100000
    makeJetResolutions.main(n_events, output_folder)


# def validate(output_folder):
#     root_files_new = glob.glob(os.path.join(output_folder, '*.root'))
#     root_files_legacy = glob.glob(os.path.join(
#         output_folder.replace('new', 'legacy'), '*.root'))
#     root_files_new = sorted(root_files_new)
#     root_files_legacy = sorted(root_files_legacy)
#     for n,l in zip(root_files_new, root_files_legacy):
#         pass

if __name__ == '__main__':
    print('=' * 80)
    print('Starting CMS L1T Analsysis benchmark')
    print('=' * 80)
    print()
    print("Work in progress")

    # add 'external' folder to include path
    gROOT.ProcessLine(".include external")
    gSystem.Load('build/L1TAnalysisDataformats.so')

    print(">> Compiling Legacy macros")
    gSystem.CompileMacro(
        "legacy/MakePlots/makeJetResolutions.cxx", 'kOs', 'build/makeJetResolutions')

    output_folder = os.path.join(
        'benchmark', 'new',
        '{y}{m:02d}{d:02d}_Data_run-276243_SingleMu_CHUNK0'.format(
            y=TODAY.tm_year, m=TODAY.tm_mon, d=TODAY.tm_mday),
        'Turnons'
    )

    run_legacy()

    run_new(output_folder)

    # validate(output_folder)

    print()
    print('=' * 80)
    print()
